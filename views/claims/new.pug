extends ../dashboard

block inner-content
  .row.mb-5
    .col-12.text-center
      h1 New Claim
  form.needs-validation(enctype='multipart/form-data' novalidate action='/claims' method='POST')
    .row.mb-5
      .col-12
        .row.mb-1
          .col-12
            h2 Information
        .row.mb-3
          .col-md-6
            label(for='employee-name') Name
            input#employee-name.form-control(type='text' value=employeeName readonly=true)
          .col-md-6
            label(for='employee-id') Employee ID
            input#employee-id.form-control(type='number' value=employeeId readonly=true)
        .row
          .col-md-4
            label(for='company-name') Company
            select#company-name.custom-select(name='companyName' required)
              option(value='') Choose..
              each companyName in companyNames
                option(value= companyName)= companyName
            .invalid-feedback
              | Please select a valid company.
            .valid-feedback
              | Looks good!
          .col-md-4
            label(for='cost-centre') Cost Centre
            select#cost-centre.custom-select(name='costCentreNumber' required)
              option(value='') Choose..
              each costCentre in costCentres
                option(value= costCentre)= costCentre
            .invalid-feedback
              | Please select a valid cost centre.
            .valid-feedback
              | Looks good!
          .col-md-4
              label(for='bank-account') Bank Account #
              input#bank-account.form-control(name='bankAccount' placeholder='Leave blank for payroll..' type='text' maxlength='14' minlength='14')
              .invalid-feedback
                | Please enter a 14 digit bank account.
              .valid-feedback
                | Looks good!
    .row.mb-5
      .col-12
        .row.mb-1
          .col-12
            h2 Items
        .row
          .col-12
            div.item(v-for='(item, index) in items')
              .row
                .col-md-1
                  span.badge.badge-warning.badge-pill.badge-lg {{ index + 1 }}
                .col-md-4
                  label(for='date') Date
                  input.date.form-control(name='items[0][date]' type='date' v-model='item.date' value='' required)
                  .invalid-feedback
                    | Please enter a valid date.
                  .valid-feedback
                    | Looks good!
                .col-md-4
                  label(for='expense-category') Expense Category
                  select.expense-category.custom-select(v-model='item.glNumber' required)
                    option(value='') Choose..
                    each gl in gls
                      option(value=gl.number)= gl.description
                  .invalid-feedback
                    | Please select an expense category.
                  .valid-feedback
                    | Looks good!
                .col-md-2
                  label(for='gl') GL
                  select#gl.custom-select(name='items[0][glNumber]' v-model='item.glNumber' required)
                    option(value='') Choose..
                    each gl in gls
                      option(value=gl.number)= gl.number
                  .invalid-feedback
                    | Please select a valid GL.
                  .valid-feedback
                    | Looks good!
                .col-md-1.text-right
                  span#remove-item.btn.badge.badge-danger.badge-pill.badge-lg(v-if='index !== 0' @click='items.splice(index, 1)') -
              .row.mb-3
                .col-md-12
                  label(for='description') Description
                  input#description.form-control(name='[0][description]' type='text' value='' v-model='item.description' size='70' required)
                  .invalid-feedback
                    | Please enter a description.
                  .valid-feedback
                    | Looks good!
              .row.mb-4
                .col-md-7
                  .d-flex.justify-content-between.align-items-center
                    label(for='num-km') # Km Travelled
                    span.badge.badge-secondary.badge-sm.num-km-info(data-toggle='tooltip' data-placement='top' title='' data-original-title='$0.54 < 5000Km, $0.48 > 5000Km') ?
                  input.num-km.form-control(name='items[0][numKm]' type='number' value='' v-model.number='item.numKm' required)
                  .invalid-feedback
                    | Please enter the # of kilometers travelled.
                  .valid-feedback
                    | Looks good!
                .col-md-12.upload(style='display:none;')
                    label(class='custom-file-label' for='receipt') Choose file..
                    input.receipt.form-control(name='items[0][receipt]' class='custom-file-input' value='' type='file')
                .col-md-5
                  label(for='total') Total
                  input.total.form-control(name='items[0][total]' type='number' :value='item.total' readonly=true)
        .row
          .col-12
            div#add-item.btn.btn-warning.btn-block.btn-lg(@click='addItem()') Add Item
    .row.mb-1.mb-5
      .col-12.text-center
        .d-flex.justify-content-between.align-items-center.mb-3
          h2.mb-0 Summary
          span.badge.badge-success.badge-pill.badge-lg {{ items.length }}
        .row.mb-3
          .col-md-6
            label(for='previous-total-mileage') Previous Total Mileage
            input#previous-total-mileage.form-control(type='number' :value='previousMileage' readonly=true)
          .col-md-6
            label(for='carry-mileage') Carry Forward Mileage
            input#carry-mileage.form-control(type='number' :value='carryForwardMileage' readonly=true)
        .row.mb-4
          .col-12
            hr
            div
              label(for='total') Total
              input#total.form-control(type='number' :value='itemsTotal' readonly=true)
        .row
          .col-12
            button.btn.btn-success.btn-lg.btn-block(type='submit') Submit

block scripts
  script.
    (function() {
      'use strict';

      window.addEventListener('load', function() {
        var forms = document.getElementsByClassName('needs-validation');
        var validation = Array.prototype.filter.call(forms, function(form) {
          form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      }, false);
    })();

  script.
    var expenseClaimApp = new Vue({
      el: '#expense-claim-app',
      data: {
        previousMileage: parseInt(#{previousMileage}),
        costCentreNumber: '',
        bankAccount: '',
        items: [{
          date: '',
          glNumber: '',
          numKm: 0,
          receipt: '',
          description: '',
          total: 0,
        }],
      },
      methods: {
        addItem: function () {
          this.items.push({
            date: '',
            glNumber: '',
            numKm: 0,
            receipt: '',
            description: '',
            total: 0,
          });
        },
        addTooltips: function () {
          $(this.$el).find('.num-km-info').tooltip();
        },
      },
      mounted: function () {
        this.addTooltips();
      },
      updated: function () {
       this.addTooltips();
      },
      computed: {
        itemsTotal: function () {
          return this.items.reduce((acc, item) => acc + item.total, 0);
        },
        carryForwardMileage: function () {
          return this.previousMileage + this.items.reduce((acc, item) => acc + parseInt(item.numKm || 0), 0);
        },
      },
    });
